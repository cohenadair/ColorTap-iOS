// ignore_for_file: directives_ordering,avoid_equals_and_hash_code_on_mutable_classes,lines_longer_than_80_chars,subtype_of_sealed_class,unnecessary_overrides,must_be_immutable,duplicate_ignore,invalid_implementation_override,deprecated_member_use
// Mocks generated by Mockito 5.4.4 from annotations
// in mobile/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i19;
import 'dart:isolate' as _i30;
import 'dart:typed_data' as _i29;
import 'dart:ui' as _i5;

import 'package:flame/cache.dart' as _i6;
import 'package:flame/camera.dart' as _i45;
import 'package:flame/components.dart' as _i3;
import 'package:flame/game.dart' as _i4;
import 'package:flame/src/components/core/component_tree_root.dart' as _i21;
import 'package:flame/src/events/messages/tap_down_event.dart' as _i42;
import 'package:flame/src/game/game_render_box.dart' as _i9;
import 'package:flame/src/game/game_widget/gesture_detector_builder.dart'
    as _i7;
import 'package:flame/src/game/overlay_manager.dart' as _i8;
import 'package:flame/src/rendering/decorator.dart' as _i17;
import 'package:flutter/gestures.dart' as _i20;
import 'package:flutter/material.dart' as _i10;
import 'package:flutter/rendering.dart' as _i22;
import 'package:flutter/services.dart' as _i31;
import 'package:google_mobile_ads/google_mobile_ads.dart' as _i39;
import 'package:google_mobile_ads/src/ad_listeners.dart' as _i16;
import 'package:mobile/color_tap_game.dart' as _i18;
import 'package:mobile/color_tap_world.dart' as _i2;
import 'package:mobile/components/target.dart' as _i23;
import 'package:mobile/components/target_board.dart' as _i24;
import 'package:mobile/difficulty.dart' as _i34;
import 'package:mobile/managers/lives_manager.dart' as _i28;
import 'package:mobile/managers/preference_manager.dart' as _i33;
import 'package:mobile/managers/properties_manager.dart' as _i35;
import 'package:mobile/managers/purchases_manager.dart' as _i36;
import 'package:mobile/managers/time_manager.dart' as _i43;
import 'package:mobile/target_color.dart' as _i11;
import 'package:mobile/wrappers/internet_address_wrapper.dart' as _i27;
import 'package:mobile/wrappers/platform_wrapper.dart' as _i32;
import 'package:mobile/wrappers/purchases_wrapper.dart' as _i37;
import 'package:mobile/wrappers/rewarded_ad_wrapper.dart' as _i40;
import 'package:mobile/wrappers/url_launcher_wrapper.dart' as _i44;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i26;
import 'package:purchases_flutter/models/entitlement_infos_wrapper.dart'
    as _i12;
import 'package:purchases_flutter/models/offering_wrapper.dart' as _i14;
import 'package:purchases_flutter/models/package_wrapper.dart' as _i15;
import 'package:purchases_flutter/models/store_transaction.dart' as _i25;
import 'package:purchases_flutter/object_wrappers.dart' as _i13;
import 'package:purchases_flutter/purchases_flutter.dart' as _i38;
import 'package:shared_preferences/shared_preferences.dart' as _i41;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeColorTapWorld_0 extends _i1.SmartFake implements _i2.ColorTapWorld {
  _FakeColorTapWorld_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCameraComponent_1 extends _i1.SmartFake
    implements _i3.CameraComponent {
  _FakeCameraComponent_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVector2_2 extends _i1.SmartFake implements _i4.Vector2 {
  _FakeVector2_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeColor_3 extends _i1.SmartFake implements _i5.Color {
  _FakeColor_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeComponentSet_4 extends _i1.SmartFake implements _i3.ComponentSet {
  _FakeComponentSet_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaint_5 extends _i1.SmartFake implements _i5.Paint {
  _FakePaint_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextPaint_6 extends _i1.SmartFake implements _i4.TextPaint {
  _FakeTextPaint_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImages_7 extends _i1.SmartFake implements _i6.Images {
  _FakeImages_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAssetsCache_8 extends _i1.SmartFake implements _i6.AssetsCache {
  _FakeAssetsCache_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGestureDetectorBuilder_9 extends _i1.SmartFake
    implements _i7.GestureDetectorBuilder {
  _FakeGestureDetectorBuilder_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOverlayManager_10 extends _i1.SmartFake
    implements _i8.OverlayManager {
  _FakeOverlayManager_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGameRenderBox_11 extends _i1.SmartFake implements _i9.GameRenderBox {
  _FakeGameRenderBox_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i10.DiagnosticLevel? minLevel = _i10.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeMouseCursor_12 extends _i1.SmartFake implements _i10.MouseCursor {
  _FakeMouseCursor_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i10.DiagnosticLevel? minLevel = _i10.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeComponentsNotifier_13<T1 extends _i3.Component> extends _i1.SmartFake
    implements _i3.ComponentsNotifier<T1> {
  _FakeComponentsNotifier_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSprite_14 extends _i1.SmartFake implements _i3.Sprite {
  _FakeSprite_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSpriteAnimation_15 extends _i1.SmartFake
    implements _i3.SpriteAnimation {
  _FakeSpriteAnimation_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTargetColor_16 extends _i1.SmartFake implements _i11.TargetColor {
  _FakeTargetColor_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlameGame_17<W extends _i3.World> extends _i1.SmartFake
    implements _i4.FlameGame<W> {
  _FakeFlameGame_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEntitlementInfos_18 extends _i1.SmartFake
    implements _i12.EntitlementInfos {
  _FakeEntitlementInfos_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$CustomerInfoCopyWith_19<$Res> extends _i1.SmartFake
    implements _i13.$CustomerInfoCopyWith<$Res> {
  _Fake$CustomerInfoCopyWith_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlatformDispatcher_20 extends _i1.SmartFake
    implements _i5.PlatformDispatcher {
  _FakePlatformDispatcher_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDisplay_21 extends _i1.SmartFake implements _i5.Display {
  _FakeDisplay_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRect_22 extends _i1.SmartFake implements _i5.Rect {
  _FakeRect_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSize_23 extends _i1.SmartFake implements _i5.Size {
  _FakeSize_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeViewPadding_24 extends _i1.SmartFake implements _i5.ViewPadding {
  _FakeViewPadding_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGestureSettings_25 extends _i1.SmartFake
    implements _i5.GestureSettings {
  _FakeGestureSettings_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$OfferingCopyWith_26<$Res> extends _i1.SmartFake
    implements _i14.$OfferingCopyWith<$Res> {
  _Fake$OfferingCopyWith_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$OfferingsCopyWith_27<$Res> extends _i1.SmartFake
    implements _i13.$OfferingsCopyWith<$Res> {
  _Fake$OfferingsCopyWith_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStoreProduct_28 extends _i1.SmartFake implements _i13.StoreProduct {
  _FakeStoreProduct_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$PackageCopyWith_29<$Res> extends _i1.SmartFake
    implements _i15.$PackageCopyWith<$Res> {
  _Fake$PackageCopyWith_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccessibilityFeatures_30 extends _i1.SmartFake
    implements _i5.AccessibilityFeatures {
  _FakeAccessibilityFeatures_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocale_31 extends _i1.SmartFake implements _i5.Locale {
  _FakeLocale_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFrameData_32 extends _i1.SmartFake implements _i5.FrameData {
  _FakeFrameData_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOfferings_33 extends _i1.SmartFake implements _i13.Offerings {
  _FakeOfferings_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCustomerInfo_34 extends _i1.SmartFake implements _i13.CustomerInfo {
  _FakeCustomerInfo_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRewardedAdLoadCallback_35 extends _i1.SmartFake
    implements _i16.RewardedAdLoadCallback {
  _FakeRewardedAdLoadCallback_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$StoreProductCopyWith_36<$Res> extends _i1.SmartFake
    implements _i13.$StoreProductCopyWith<$Res> {
  _Fake$StoreProductCopyWith_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeComponentKey_37 extends _i1.SmartFake implements _i3.ComponentKey {
  _FakeComponentKey_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransform2D_38 extends _i1.SmartFake implements _i4.Transform2D {
  _FakeTransform2D_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDecorator_39 extends _i1.SmartFake implements _i17.Decorator {
  _FakeDecorator_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMatrix4_40 extends _i1.SmartFake implements _i4.Matrix4 {
  _FakeMatrix4_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotifyingVector2_41 extends _i1.SmartFake
    implements _i4.NotifyingVector2 {
  _FakeNotifyingVector2_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAnchor_42 extends _i1.SmartFake implements _i3.Anchor {
  _FakeAnchor_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ColorTapGame].
///
/// See the documentation for Mockito's code generation for more information.
class MockColorTapGame extends _i1.Mock implements _i18.ColorTapGame {
  MockColorTapGame() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.ComponentsNotifier<_i3.Component>> get notifiers =>
      (super.noSuchMethod(
        Invocation.getter(#notifiers),
        returnValue: <_i3.ComponentsNotifier<_i3.Component>>[],
      ) as List<_i3.ComponentsNotifier<_i3.Component>>);

  @override
  bool get pauseWhenBackgrounded => (super.noSuchMethod(
        Invocation.getter(#pauseWhenBackgrounded),
        returnValue: false,
      ) as bool);

  @override
  set pauseWhenBackgrounded(bool? _pauseWhenBackgrounded) => super.noSuchMethod(
        Invocation.setter(
          #pauseWhenBackgrounded,
          _pauseWhenBackgrounded,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.ColorTapWorld get world => (super.noSuchMethod(
        Invocation.getter(#world),
        returnValue: _FakeColorTapWorld_0(
          this,
          Invocation.getter(#world),
        ),
      ) as _i2.ColorTapWorld);

  @override
  set world(_i2.ColorTapWorld? newWorld) => super.noSuchMethod(
        Invocation.setter(
          #world,
          newWorld,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.CameraComponent get camera => (super.noSuchMethod(
        Invocation.getter(#camera),
        returnValue: _FakeCameraComponent_1(
          this,
          Invocation.getter(#camera),
        ),
      ) as _i3.CameraComponent);

  @override
  set camera(_i3.CameraComponent? newCameraComponent) => super.noSuchMethod(
        Invocation.setter(
          #camera,
          newCameraComponent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Vector2 get size => (super.noSuchMethod(
        Invocation.getter(#size),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#size),
        ),
      ) as _i4.Vector2);

  @override
  bool get hasLifecycleEvents => (super.noSuchMethod(
        Invocation.getter(#hasLifecycleEvents),
        returnValue: false,
      ) as bool);

  @override
  bool get debugMode => (super.noSuchMethod(
        Invocation.getter(#debugMode),
        returnValue: false,
      ) as bool);

  @override
  set debugMode(bool? _debugMode) => super.noSuchMethod(
        Invocation.setter(
          #debugMode,
          _debugMode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set debugCoordinatesPrecision(int? _debugCoordinatesPrecision) =>
      super.noSuchMethod(
        Invocation.setter(
          #debugCoordinatesPrecision,
          _debugCoordinatesPrecision,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Color get debugColor => (super.noSuchMethod(
        Invocation.getter(#debugColor),
        returnValue: _FakeColor_3(
          this,
          Invocation.getter(#debugColor),
        ),
      ) as _i5.Color);

  @override
  set debugColor(_i5.Color? _debugColor) => super.noSuchMethod(
        Invocation.setter(
          #debugColor,
          _debugColor,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isLoaded => (super.noSuchMethod(
        Invocation.getter(#isLoaded),
        returnValue: false,
      ) as bool);

  @override
  bool get isMounting => (super.noSuchMethod(
        Invocation.getter(#isMounting),
        returnValue: false,
      ) as bool);

  @override
  bool get isMounted => (super.noSuchMethod(
        Invocation.getter(#isMounted),
        returnValue: false,
      ) as bool);

  @override
  bool get isRemoving => (super.noSuchMethod(
        Invocation.getter(#isRemoving),
        returnValue: false,
      ) as bool);

  @override
  bool get isRemoved => (super.noSuchMethod(
        Invocation.getter(#isRemoved),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<void> get loaded => (super.noSuchMethod(
        Invocation.getter(#loaded),
        returnValue: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> get removed => (super.noSuchMethod(
        Invocation.getter(#removed),
        returnValue: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  set parent(_i3.Component? newParent) => super.noSuchMethod(
        Invocation.setter(
          #parent,
          newParent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ComponentSet get children => (super.noSuchMethod(
        Invocation.getter(#children),
        returnValue: _FakeComponentSet_4(
          this,
          Invocation.getter(#children),
        ),
      ) as _i3.ComponentSet);

  @override
  bool get hasChildren => (super.noSuchMethod(
        Invocation.getter(#hasChildren),
        returnValue: false,
      ) as bool);

  @override
  int get priority => (super.noSuchMethod(
        Invocation.getter(#priority),
        returnValue: 0,
      ) as int);

  @override
  set priority(int? newPriority) => super.noSuchMethod(
        Invocation.setter(
          #priority,
          newPriority,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Paint get debugPaint => (super.noSuchMethod(
        Invocation.getter(#debugPaint),
        returnValue: _FakePaint_5(
          this,
          Invocation.getter(#debugPaint),
        ),
      ) as _i5.Paint);

  @override
  _i4.TextPaint get debugTextPaint => (super.noSuchMethod(
        Invocation.getter(#debugTextPaint),
        returnValue: _FakeTextPaint_6(
          this,
          Invocation.getter(#debugTextPaint),
        ),
      ) as _i4.TextPaint);

  @override
  _i6.Images get images => (super.noSuchMethod(
        Invocation.getter(#images),
        returnValue: _FakeImages_7(
          this,
          Invocation.getter(#images),
        ),
      ) as _i6.Images);

  @override
  set images(_i6.Images? _images) => super.noSuchMethod(
        Invocation.setter(
          #images,
          _images,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.AssetsCache get assets => (super.noSuchMethod(
        Invocation.getter(#assets),
        returnValue: _FakeAssetsCache_8(
          this,
          Invocation.getter(#assets),
        ),
      ) as _i6.AssetsCache);

  @override
  set assets(_i6.AssetsCache? _assets) => super.noSuchMethod(
        Invocation.setter(
          #assets,
          _assets,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.GestureDetectorBuilder get gestureDetectors => (super.noSuchMethod(
        Invocation.getter(#gestureDetectors),
        returnValue: _FakeGestureDetectorBuilder_9(
          this,
          Invocation.getter(#gestureDetectors),
        ),
      ) as _i7.GestureDetectorBuilder);

  @override
  _i8.OverlayManager get overlays => (super.noSuchMethod(
        Invocation.getter(#overlays),
        returnValue: _FakeOverlayManager_10(
          this,
          Invocation.getter(#overlays),
        ),
      ) as _i8.OverlayManager);

  @override
  List<_i5.VoidCallback> get gameStateListeners => (super.noSuchMethod(
        Invocation.getter(#gameStateListeners),
        returnValue: <_i5.VoidCallback>[],
      ) as List<_i5.VoidCallback>);

  @override
  set mouseDetector(void Function(_i20.PointerHoverEvent)? newMouseDetector) =>
      super.noSuchMethod(
        Invocation.setter(
          #mouseDetector,
          newMouseDetector,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.GameRenderBox get renderBox => (super.noSuchMethod(
        Invocation.getter(#renderBox),
        returnValue: _FakeGameRenderBox_11(
          this,
          Invocation.getter(#renderBox),
        ),
      ) as _i9.GameRenderBox);

  @override
  bool get isAttached => (super.noSuchMethod(
        Invocation.getter(#isAttached),
        returnValue: false,
      ) as bool);

  @override
  _i4.Vector2 get canvasSize => (super.noSuchMethod(
        Invocation.getter(#canvasSize),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#canvasSize),
        ),
      ) as _i4.Vector2);

  @override
  bool get hasLayout => (super.noSuchMethod(
        Invocation.getter(#hasLayout),
        returnValue: false,
      ) as bool);

  @override
  bool get paused => (super.noSuchMethod(
        Invocation.getter(#paused),
        returnValue: false,
      ) as bool);

  @override
  set paused(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #paused,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.MouseCursor get mouseCursor => (super.noSuchMethod(
        Invocation.getter(#mouseCursor),
        returnValue: _FakeMouseCursor_12(
          this,
          Invocation.getter(#mouseCursor),
        ),
      ) as _i10.MouseCursor);

  @override
  set mouseCursor(_i10.MouseCursor? value) => super.noSuchMethod(
        Invocation.setter(
          #mouseCursor,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Color backgroundColor() => (super.noSuchMethod(
        Invocation.method(
          #backgroundColor,
          [],
        ),
        returnValue: _FakeColor_3(
          this,
          Invocation.method(
            #backgroundColor,
            [],
          ),
        ),
      ) as _i5.Color);

  @override
  void onLoad() => super.noSuchMethod(
        Invocation.method(
          #onLoad,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void mount() => super.noSuchMethod(
        Invocation.method(
          #mount,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void render(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #render,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void renderTree(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #renderTree,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update(double? dt) => super.noSuchMethod(
        Invocation.method(
          #update,
          [dt],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateTree(double? dt) => super.noSuchMethod(
        Invocation.method(
          #updateTree,
          [dt],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onGameResize(_i4.Vector2? size) => super.noSuchMethod(
        Invocation.method(
          #onGameResize,
          [size],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> ready() => (super.noSuchMethod(
        Invocation.method(
          #ready,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool containsLocalPoint(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #containsLocalPoint,
          [point],
        ),
        returnValue: false,
      ) as bool);

  @override
  double currentTime() => (super.noSuchMethod(
        Invocation.method(
          #currentTime,
          [],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  _i3.ComponentsNotifier<T> componentsNotifier<T extends _i3.Component>() =>
      (super.noSuchMethod(
        Invocation.method(
          #componentsNotifier,
          [],
        ),
        returnValue: _FakeComponentsNotifier_13<T>(
          this,
          Invocation.method(
            #componentsNotifier,
            [],
          ),
        ),
      ) as _i3.ComponentsNotifier<T>);

  @override
  void propagateToApplicableNotifiers(
    _i3.Component? component,
    void Function(_i3.ComponentsNotifier<_i3.Component>)? callback,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #propagateToApplicableNotifiers,
          [
            component,
            callback,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void lifecycleStateChange(_i5.AppLifecycleState? state) => super.noSuchMethod(
        Invocation.method(
          #lifecycleStateChange,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pauseEngine() => super.noSuchMethod(
        Invocation.method(
          #pauseEngine,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resumeEngine() => super.noSuchMethod(
        Invocation.method(
          #resumeEngine,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void enqueueAdd(
    _i3.Component? child,
    _i3.Component? parent,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #enqueueAdd,
          [
            child,
            parent,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dequeueAdd(
    _i3.Component? child,
    _i3.Component? parent,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #dequeueAdd,
          [
            child,
            parent,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void enqueueRemove(
    _i3.Component? child,
    _i3.Component? parent,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #enqueueRemove,
          [
            child,
            parent,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dequeueRemove(_i3.Component? child) => super.noSuchMethod(
        Invocation.method(
          #dequeueRemove,
          [child],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void enqueueMove(
    _i3.Component? child,
    _i3.Component? newParent,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #enqueueMove,
          [
            child,
            newParent,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void enqueueRebalance(_i3.Component? parent) => super.noSuchMethod(
        Invocation.method(
          #enqueueRebalance,
          [parent],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void processLifecycleEvents() => super.noSuchMethod(
        Invocation.method(
          #processLifecycleEvents,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void processRebalanceEvents() => super.noSuchMethod(
        Invocation.method(
          #processRebalanceEvents,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleResize(_i4.Vector2? size) => super.noSuchMethod(
        Invocation.method(
          #handleResize,
          [size],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerKey(
    _i3.ComponentKey? key,
    _i3.Component? component,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #registerKey,
          [
            key,
            component,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterKey(_i3.ComponentKey? key) => super.noSuchMethod(
        Invocation.method(
          #unregisterKey,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T? findByKey<T extends _i3.Component>(_i3.ComponentKey? key) =>
      (super.noSuchMethod(Invocation.method(
        #findByKey,
        [key],
      )) as T?);

  @override
  T? findByKeyName<T extends _i3.Component>(String? name) =>
      (super.noSuchMethod(Invocation.method(
        #findByKeyName,
        [name],
      )) as T?);

  @override
  _i3.ComponentSet createComponentSet() => (super.noSuchMethod(
        Invocation.method(
          #createComponentSet,
          [],
        ),
        returnValue: _FakeComponentSet_4(
          this,
          Invocation.method(
            #createComponentSet,
            [],
          ),
        ),
      ) as _i3.ComponentSet);

  @override
  T? findParent<T extends _i3.Component>({bool? includeSelf = false}) =>
      (super.noSuchMethod(Invocation.method(
        #findParent,
        [],
        {#includeSelf: includeSelf},
      )) as T?);

  @override
  Iterable<_i3.Component> ancestors({bool? includeSelf = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #ancestors,
          [],
          {#includeSelf: includeSelf},
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  Iterable<_i3.Component> descendants({
    bool? includeSelf = false,
    bool? reversed = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #descendants,
          [],
          {
            #includeSelf: includeSelf,
            #reversed: reversed,
          },
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  bool propagateToChildren<T extends _i3.Component>(
    bool Function(T)? handler, {
    bool? includeSelf = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #propagateToChildren,
          [handler],
          {#includeSelf: includeSelf},
        ),
        returnValue: false,
      ) as bool);

  @override
  bool contains(_i3.Component? c) => (super.noSuchMethod(
        Invocation.method(
          #contains,
          [c],
        ),
        returnValue: false,
      ) as bool);

  @override
  void onMount() => super.noSuchMethod(
        Invocation.method(
          #onMount,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onRemove() => super.noSuchMethod(
        Invocation.method(
          #onRemove,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onParentResize(_i4.Vector2? maxSize) => super.noSuchMethod(
        Invocation.method(
          #onParentResize,
          [maxSize],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChildrenChanged(
    _i3.Component? child,
    _i3.ChildrenChangeType? type,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onChildrenChanged,
          [
            child,
            type,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.FutureOr<void> add(_i3.Component? component) =>
      (super.noSuchMethod(Invocation.method(
        #add,
        [component],
      )) as _i19.FutureOr<void>);

  @override
  _i19.FutureOr<void> addToParent(_i3.Component? parent) =>
      (super.noSuchMethod(Invocation.method(
        #addToParent,
        [parent],
      )) as _i19.FutureOr<void>);

  @override
  _i19.Future<void> addAll(Iterable<_i3.Component>? components) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAll,
          [components],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void remove(_i3.Component? component) => super.noSuchMethod(
        Invocation.method(
          #remove,
          [component],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeFromParent() => super.noSuchMethod(
        Invocation.method(
          #removeFromParent,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeAll(Iterable<_i3.Component>? components) => super.noSuchMethod(
        Invocation.method(
          #removeAll,
          [components],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeWhere(bool Function(_i3.Component)? test) => super.noSuchMethod(
        Invocation.method(
          #removeWhere,
          [test],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool containsPoint(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #containsPoint,
          [point],
        ),
        returnValue: false,
      ) as bool);

  @override
  Iterable<_i3.Component> componentsAtPoint(
    _i4.Vector2? point, [
    List<_i4.Vector2>? nestedPoints,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #componentsAtPoint,
          [
            point,
            nestedPoints,
          ],
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  Iterable<_i3.Component> componentsAtLocation<T>(
    T? locationContext,
    List<T>? nestedContexts,
    T? Function(
      _i3.CoordinateTransform,
      T,
    )? transformContext,
    bool Function(
      _i3.Component,
      T,
    )? checkContains,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #componentsAtLocation,
          [
            locationContext,
            nestedContexts,
            transformContext,
            checkContains,
          ],
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  _i21.LifecycleEventStatus handleLifecycleEventAdd(_i3.Component? parent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleLifecycleEventAdd,
          [parent],
        ),
        returnValue: _i21.LifecycleEventStatus.skip,
      ) as _i21.LifecycleEventStatus);

  @override
  _i21.LifecycleEventStatus handleLifecycleEventRemove(_i3.Component? parent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleLifecycleEventRemove,
          [parent],
        ),
        returnValue: _i21.LifecycleEventStatus.skip,
      ) as _i21.LifecycleEventStatus);

  @override
  _i21.LifecycleEventStatus handleLifecycleEventMove(
          _i3.Component? newParent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleLifecycleEventMove,
          [newParent],
        ),
        returnValue: _i21.LifecycleEventStatus.skip,
      ) as _i21.LifecycleEventStatus);

  @override
  void setMounted() => super.noSuchMethod(
        Invocation.method(
          #setMounted,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void renderDebugMode(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #renderDebugMode,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void assertHasLayout() => super.noSuchMethod(
        Invocation.method(
          #assertHasLayout,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void attach(
    _i22.PipelineOwner? owner,
    _i9.GameRenderBox? gameRenderBox,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #attach,
          [
            owner,
            gameRenderBox,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onAttach() => super.noSuchMethod(
        Invocation.method(
          #onAttach,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void detach() => super.noSuchMethod(
        Invocation.method(
          #detach,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDetach() => super.noSuchMethod(
        Invocation.method(
          #onDetach,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Vector2 convertGlobalToLocalCoordinate(_i4.Vector2? point) =>
      (super.noSuchMethod(
        Invocation.method(
          #convertGlobalToLocalCoordinate,
          [point],
        ),
        returnValue: _FakeVector2_2(
          this,
          Invocation.method(
            #convertGlobalToLocalCoordinate,
            [point],
          ),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 convertLocalToGlobalCoordinate(_i4.Vector2? point) =>
      (super.noSuchMethod(
        Invocation.method(
          #convertLocalToGlobalCoordinate,
          [point],
        ),
        returnValue: _FakeVector2_2(
          this,
          Invocation.method(
            #convertLocalToGlobalCoordinate,
            [point],
          ),
        ),
      ) as _i4.Vector2);

  @override
  _i19.Future<_i3.Sprite> loadSprite(
    String? path, {
    _i4.Vector2? srcSize,
    _i4.Vector2? srcPosition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadSprite,
          [path],
          {
            #srcSize: srcSize,
            #srcPosition: srcPosition,
          },
        ),
        returnValue: _i19.Future<_i3.Sprite>.value(_FakeSprite_14(
          this,
          Invocation.method(
            #loadSprite,
            [path],
            {
              #srcSize: srcSize,
              #srcPosition: srcPosition,
            },
          ),
        )),
      ) as _i19.Future<_i3.Sprite>);

  @override
  _i19.Future<_i3.SpriteAnimation> loadSpriteAnimation(
    String? path,
    _i3.SpriteAnimationData? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadSpriteAnimation,
          [
            path,
            data,
          ],
        ),
        returnValue:
            _i19.Future<_i3.SpriteAnimation>.value(_FakeSpriteAnimation_15(
          this,
          Invocation.method(
            #loadSpriteAnimation,
            [
              path,
              data,
            ],
          ),
        )),
      ) as _i19.Future<_i3.SpriteAnimation>);

  @override
  void stepEngine({double? stepTime = 0.016666666666666666}) =>
      super.noSuchMethod(
        Invocation.method(
          #stepEngine,
          [],
          {#stepTime: stepTime},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addGameStateListener(_i5.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #addGameStateListener,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeGameStateListener(_i5.VoidCallback? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #removeGameStateListener,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshWidget({bool? isInternalRefresh = true}) => super.noSuchMethod(
        Invocation.method(
          #refreshWidget,
          [],
          {#isInternalRefresh: isInternalRefresh},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ColorTapWorld].
///
/// See the documentation for Mockito's code generation for more information.
class MockColorTapWorld extends _i1.Mock implements _i2.ColorTapWorld {
  MockColorTapWorld() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get scrollingPaused => (super.noSuchMethod(
        Invocation.getter(#scrollingPaused),
        returnValue: false,
      ) as bool);

  @override
  set scrollingPaused(bool? _scrollingPaused) => super.noSuchMethod(
        Invocation.setter(
          #scrollingPaused,
          _scrollingPaused,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get speed => (super.noSuchMethod(
        Invocation.getter(#speed),
        returnValue: 0.0,
      ) as double);

  @override
  _i11.TargetColor get color => (super.noSuchMethod(
        Invocation.getter(#color),
        returnValue: _FakeTargetColor_16(
          this,
          Invocation.getter(#color),
        ),
      ) as _i11.TargetColor);

  @override
  int get score => (super.noSuchMethod(
        Invocation.getter(#score),
        returnValue: 0,
      ) as int);

  @override
  bool get debugMode => (super.noSuchMethod(
        Invocation.getter(#debugMode),
        returnValue: false,
      ) as bool);

  @override
  set debugMode(bool? _debugMode) => super.noSuchMethod(
        Invocation.setter(
          #debugMode,
          _debugMode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set debugCoordinatesPrecision(int? _debugCoordinatesPrecision) =>
      super.noSuchMethod(
        Invocation.setter(
          #debugCoordinatesPrecision,
          _debugCoordinatesPrecision,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Color get debugColor => (super.noSuchMethod(
        Invocation.getter(#debugColor),
        returnValue: _FakeColor_3(
          this,
          Invocation.getter(#debugColor),
        ),
      ) as _i5.Color);

  @override
  set debugColor(_i5.Color? _debugColor) => super.noSuchMethod(
        Invocation.setter(
          #debugColor,
          _debugColor,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isLoaded => (super.noSuchMethod(
        Invocation.getter(#isLoaded),
        returnValue: false,
      ) as bool);

  @override
  bool get isMounting => (super.noSuchMethod(
        Invocation.getter(#isMounting),
        returnValue: false,
      ) as bool);

  @override
  bool get isMounted => (super.noSuchMethod(
        Invocation.getter(#isMounted),
        returnValue: false,
      ) as bool);

  @override
  bool get isRemoving => (super.noSuchMethod(
        Invocation.getter(#isRemoving),
        returnValue: false,
      ) as bool);

  @override
  bool get isRemoved => (super.noSuchMethod(
        Invocation.getter(#isRemoved),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<void> get loaded => (super.noSuchMethod(
        Invocation.getter(#loaded),
        returnValue: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> get removed => (super.noSuchMethod(
        Invocation.getter(#removed),
        returnValue: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  set parent(_i3.Component? newParent) => super.noSuchMethod(
        Invocation.setter(
          #parent,
          newParent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ComponentSet get children => (super.noSuchMethod(
        Invocation.getter(#children),
        returnValue: _FakeComponentSet_4(
          this,
          Invocation.getter(#children),
        ),
      ) as _i3.ComponentSet);

  @override
  bool get hasChildren => (super.noSuchMethod(
        Invocation.getter(#hasChildren),
        returnValue: false,
      ) as bool);

  @override
  int get priority => (super.noSuchMethod(
        Invocation.getter(#priority),
        returnValue: 0,
      ) as int);

  @override
  set priority(int? newPriority) => super.noSuchMethod(
        Invocation.setter(
          #priority,
          newPriority,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Paint get debugPaint => (super.noSuchMethod(
        Invocation.getter(#debugPaint),
        returnValue: _FakePaint_5(
          this,
          Invocation.getter(#debugPaint),
        ),
      ) as _i5.Paint);

  @override
  _i4.TextPaint get debugTextPaint => (super.noSuchMethod(
        Invocation.getter(#debugTextPaint),
        returnValue: _FakeTextPaint_6(
          this,
          Invocation.getter(#debugTextPaint),
        ),
      ) as _i4.TextPaint);

  @override
  _i4.FlameGame<_i3.World> get game => (super.noSuchMethod(
        Invocation.getter(#game),
        returnValue: _FakeFlameGame_17<_i3.World>(
          this,
          Invocation.getter(#game),
        ),
      ) as _i4.FlameGame<_i3.World>);

  @override
  set game(_i4.FlameGame<_i3.World>? value) => super.noSuchMethod(
        Invocation.setter(
          #game,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.FlameGame<_i3.World> get gameRef => (super.noSuchMethod(
        Invocation.getter(#gameRef),
        returnValue: _FakeFlameGame_17<_i3.World>(
          this,
          Invocation.getter(#gameRef),
        ),
      ) as _i4.FlameGame<_i3.World>);

  @override
  void onLoad() => super.noSuchMethod(
        Invocation.method(
          #onLoad,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleTargetHit({required bool? isCorrect}) => super.noSuchMethod(
        Invocation.method(
          #handleTargetHit,
          [],
          {#isCorrect: isCorrect},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleTargetMissed(
    _i23.Target? target,
    _i24.TargetBoard? board,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #handleTargetMissed,
          [
            target,
            board,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void play() => super.noSuchMethod(
        Invocation.method(
          #play,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void renderTree(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #renderTree,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void renderFromCamera(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #renderFromCamera,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool containsLocalPoint(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #containsLocalPoint,
          [point],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i4.Vector2? localToParent(_i4.Vector2? point) =>
      (super.noSuchMethod(Invocation.method(
        #localToParent,
        [point],
      )) as _i4.Vector2?);

  @override
  _i4.Vector2? parentToLocal(_i4.Vector2? point) =>
      (super.noSuchMethod(Invocation.method(
        #parentToLocal,
        [point],
      )) as _i4.Vector2?);

  @override
  _i3.ComponentSet createComponentSet() => (super.noSuchMethod(
        Invocation.method(
          #createComponentSet,
          [],
        ),
        returnValue: _FakeComponentSet_4(
          this,
          Invocation.method(
            #createComponentSet,
            [],
          ),
        ),
      ) as _i3.ComponentSet);

  @override
  T? findParent<T extends _i3.Component>({bool? includeSelf = false}) =>
      (super.noSuchMethod(Invocation.method(
        #findParent,
        [],
        {#includeSelf: includeSelf},
      )) as T?);

  @override
  Iterable<_i3.Component> ancestors({bool? includeSelf = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #ancestors,
          [],
          {#includeSelf: includeSelf},
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  Iterable<_i3.Component> descendants({
    bool? includeSelf = false,
    bool? reversed = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #descendants,
          [],
          {
            #includeSelf: includeSelf,
            #reversed: reversed,
          },
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  bool propagateToChildren<T extends _i3.Component>(
    bool Function(T)? handler, {
    bool? includeSelf = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #propagateToChildren,
          [handler],
          {#includeSelf: includeSelf},
        ),
        returnValue: false,
      ) as bool);

  @override
  bool contains(_i3.Component? c) => (super.noSuchMethod(
        Invocation.method(
          #contains,
          [c],
        ),
        returnValue: false,
      ) as bool);

  @override
  void onGameResize(_i4.Vector2? size) => super.noSuchMethod(
        Invocation.method(
          #onGameResize,
          [size],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onMount() => super.noSuchMethod(
        Invocation.method(
          #onMount,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onRemove() => super.noSuchMethod(
        Invocation.method(
          #onRemove,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onParentResize(_i4.Vector2? maxSize) => super.noSuchMethod(
        Invocation.method(
          #onParentResize,
          [maxSize],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update(double? dt) => super.noSuchMethod(
        Invocation.method(
          #update,
          [dt],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateTree(double? dt) => super.noSuchMethod(
        Invocation.method(
          #updateTree,
          [dt],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChildrenChanged(
    _i3.Component? child,
    _i3.ChildrenChangeType? type,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onChildrenChanged,
          [
            child,
            type,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void render(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #render,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.FutureOr<void> add(_i3.Component? component) =>
      (super.noSuchMethod(Invocation.method(
        #add,
        [component],
      )) as _i19.FutureOr<void>);

  @override
  _i19.FutureOr<void> addToParent(_i3.Component? parent) =>
      (super.noSuchMethod(Invocation.method(
        #addToParent,
        [parent],
      )) as _i19.FutureOr<void>);

  @override
  _i19.Future<void> addAll(Iterable<_i3.Component>? components) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAll,
          [components],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void remove(_i3.Component? component) => super.noSuchMethod(
        Invocation.method(
          #remove,
          [component],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeFromParent() => super.noSuchMethod(
        Invocation.method(
          #removeFromParent,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeAll(Iterable<_i3.Component>? components) => super.noSuchMethod(
        Invocation.method(
          #removeAll,
          [components],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeWhere(bool Function(_i3.Component)? test) => super.noSuchMethod(
        Invocation.method(
          #removeWhere,
          [test],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool containsPoint(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #containsPoint,
          [point],
        ),
        returnValue: false,
      ) as bool);

  @override
  Iterable<_i3.Component> componentsAtPoint(
    _i4.Vector2? point, [
    List<_i4.Vector2>? nestedPoints,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #componentsAtPoint,
          [
            point,
            nestedPoints,
          ],
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  Iterable<_i3.Component> componentsAtLocation<T>(
    T? locationContext,
    List<T>? nestedContexts,
    T? Function(
      _i3.CoordinateTransform,
      T,
    )? transformContext,
    bool Function(
      _i3.Component,
      T,
    )? checkContains,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #componentsAtLocation,
          [
            locationContext,
            nestedContexts,
            transformContext,
            checkContains,
          ],
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  _i21.LifecycleEventStatus handleLifecycleEventAdd(_i3.Component? parent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleLifecycleEventAdd,
          [parent],
        ),
        returnValue: _i21.LifecycleEventStatus.skip,
      ) as _i21.LifecycleEventStatus);

  @override
  _i21.LifecycleEventStatus handleLifecycleEventRemove(_i3.Component? parent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleLifecycleEventRemove,
          [parent],
        ),
        returnValue: _i21.LifecycleEventStatus.skip,
      ) as _i21.LifecycleEventStatus);

  @override
  _i21.LifecycleEventStatus handleLifecycleEventMove(
          _i3.Component? newParent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleLifecycleEventMove,
          [newParent],
        ),
        returnValue: _i21.LifecycleEventStatus.skip,
      ) as _i21.LifecycleEventStatus);

  @override
  void handleResize(_i4.Vector2? size) => super.noSuchMethod(
        Invocation.method(
          #handleResize,
          [size],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMounted() => super.noSuchMethod(
        Invocation.method(
          #setMounted,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void renderDebugMode(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #renderDebugMode,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ComponentsNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockComponentsNotifier<T extends _i3.Component> extends _i1.Mock
    implements _i3.ComponentsNotifier<T> {
  MockComponentsNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<T> get components => (super.noSuchMethod(
        Invocation.getter(#components),
        returnValue: <T>[],
      ) as List<T>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool applicable(_i3.Component? component) => (super.noSuchMethod(
        Invocation.method(
          #applicable,
          [component],
        ),
        returnValue: false,
      ) as bool);

  @override
  void add(T? component) => super.noSuchMethod(
        Invocation.method(
          #add,
          [component],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void remove(T? component) => super.noSuchMethod(
        Invocation.method(
          #remove,
          [component],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notify() => super.noSuchMethod(
        Invocation.method(
          #notify,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CustomerInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomerInfo extends _i1.Mock implements _i13.CustomerInfo {
  MockCustomerInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.EntitlementInfos get entitlements => (super.noSuchMethod(
        Invocation.getter(#entitlements),
        returnValue: _FakeEntitlementInfos_18(
          this,
          Invocation.getter(#entitlements),
        ),
      ) as _i12.EntitlementInfos);

  @override
  Map<String, String> get allPurchaseDates => (super.noSuchMethod(
        Invocation.getter(#allPurchaseDates),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  List<String> get activeSubscriptions => (super.noSuchMethod(
        Invocation.getter(#activeSubscriptions),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<String> get allPurchasedProductIdentifiers => (super.noSuchMethod(
        Invocation.getter(#allPurchasedProductIdentifiers),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<_i25.StoreTransaction> get nonSubscriptionTransactions =>
      (super.noSuchMethod(
        Invocation.getter(#nonSubscriptionTransactions),
        returnValue: <_i25.StoreTransaction>[],
      ) as List<_i25.StoreTransaction>);

  @override
  String get firstSeen => (super.noSuchMethod(
        Invocation.getter(#firstSeen),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#firstSeen),
        ),
      ) as String);

  @override
  String get originalAppUserId => (super.noSuchMethod(
        Invocation.getter(#originalAppUserId),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#originalAppUserId),
        ),
      ) as String);

  @override
  Map<String, String?> get allExpirationDates => (super.noSuchMethod(
        Invocation.getter(#allExpirationDates),
        returnValue: <String, String?>{},
      ) as Map<String, String?>);

  @override
  String get requestDate => (super.noSuchMethod(
        Invocation.getter(#requestDate),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#requestDate),
        ),
      ) as String);

  @override
  _i13.$CustomerInfoCopyWith<_i13.CustomerInfo> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$CustomerInfoCopyWith_19<_i13.CustomerInfo>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i13.$CustomerInfoCopyWith<_i13.CustomerInfo>);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [FlutterView].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterView extends _i1.Mock implements _i5.FlutterView {
  MockFlutterView() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get viewId => (super.noSuchMethod(
        Invocation.getter(#viewId),
        returnValue: 0,
      ) as int);

  @override
  _i5.PlatformDispatcher get platformDispatcher => (super.noSuchMethod(
        Invocation.getter(#platformDispatcher),
        returnValue: _FakePlatformDispatcher_20(
          this,
          Invocation.getter(#platformDispatcher),
        ),
      ) as _i5.PlatformDispatcher);

  @override
  _i5.Display get display => (super.noSuchMethod(
        Invocation.getter(#display),
        returnValue: _FakeDisplay_21(
          this,
          Invocation.getter(#display),
        ),
      ) as _i5.Display);

  @override
  double get devicePixelRatio => (super.noSuchMethod(
        Invocation.getter(#devicePixelRatio),
        returnValue: 0.0,
      ) as double);

  @override
  _i5.Rect get physicalGeometry => (super.noSuchMethod(
        Invocation.getter(#physicalGeometry),
        returnValue: _FakeRect_22(
          this,
          Invocation.getter(#physicalGeometry),
        ),
      ) as _i5.Rect);

  @override
  _i5.Size get physicalSize => (super.noSuchMethod(
        Invocation.getter(#physicalSize),
        returnValue: _FakeSize_23(
          this,
          Invocation.getter(#physicalSize),
        ),
      ) as _i5.Size);

  @override
  _i5.ViewPadding get viewInsets => (super.noSuchMethod(
        Invocation.getter(#viewInsets),
        returnValue: _FakeViewPadding_24(
          this,
          Invocation.getter(#viewInsets),
        ),
      ) as _i5.ViewPadding);

  @override
  _i5.ViewPadding get viewPadding => (super.noSuchMethod(
        Invocation.getter(#viewPadding),
        returnValue: _FakeViewPadding_24(
          this,
          Invocation.getter(#viewPadding),
        ),
      ) as _i5.ViewPadding);

  @override
  _i5.ViewPadding get systemGestureInsets => (super.noSuchMethod(
        Invocation.getter(#systemGestureInsets),
        returnValue: _FakeViewPadding_24(
          this,
          Invocation.getter(#systemGestureInsets),
        ),
      ) as _i5.ViewPadding);

  @override
  _i5.ViewPadding get padding => (super.noSuchMethod(
        Invocation.getter(#padding),
        returnValue: _FakeViewPadding_24(
          this,
          Invocation.getter(#padding),
        ),
      ) as _i5.ViewPadding);

  @override
  _i5.GestureSettings get gestureSettings => (super.noSuchMethod(
        Invocation.getter(#gestureSettings),
        returnValue: _FakeGestureSettings_25(
          this,
          Invocation.getter(#gestureSettings),
        ),
      ) as _i5.GestureSettings);

  @override
  List<_i5.DisplayFeature> get displayFeatures => (super.noSuchMethod(
        Invocation.getter(#displayFeatures),
        returnValue: <_i5.DisplayFeature>[],
      ) as List<_i5.DisplayFeature>);

  @override
  void render(_i5.Scene? scene) => super.noSuchMethod(
        Invocation.method(
          #render,
          [scene],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateSemantics(_i5.SemanticsUpdate? update) => super.noSuchMethod(
        Invocation.method(
          #updateSemantics,
          [update],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [InternetAddressWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetAddressWrapper extends _i1.Mock
    implements _i27.InternetAddressWrapper {
  MockInternetAddressWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
}

/// A class which mocks [LivesManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockLivesManager extends _i1.Mock implements _i28.LivesManager {
  MockLivesManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Stream<dynamic> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i19.Stream<dynamic>.empty(),
      ) as _i19.Stream<dynamic>);

  @override
  int get lives => (super.noSuchMethod(
        Invocation.getter(#lives),
        returnValue: 0,
      ) as int);

  @override
  bool get canPlay => (super.noSuchMethod(
        Invocation.getter(#canPlay),
        returnValue: false,
      ) as bool);

  @override
  void incLives(int? by) => super.noSuchMethod(
        Invocation.method(
          #incLives,
          [by],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void loseLife() => super.noSuchMethod(
        Invocation.method(
          #loseLife,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rewardWatchedAd() => super.noSuchMethod(
        Invocation.method(
          #rewardWatchedAd,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rewardAdError() => super.noSuchMethod(
        Invocation.method(
          #rewardAdError,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Offering].
///
/// See the documentation for Mockito's code generation for more information.
class MockOffering extends _i1.Mock implements _i14.Offering {
  MockOffering() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get identifier => (super.noSuchMethod(
        Invocation.getter(#identifier),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#identifier),
        ),
      ) as String);

  @override
  String get serverDescription => (super.noSuchMethod(
        Invocation.getter(#serverDescription),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#serverDescription),
        ),
      ) as String);

  @override
  Map<String, Object> get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: <String, Object>{},
      ) as Map<String, Object>);

  @override
  List<_i15.Package> get availablePackages => (super.noSuchMethod(
        Invocation.getter(#availablePackages),
        returnValue: <_i15.Package>[],
      ) as List<_i15.Package>);

  @override
  _i14.$OfferingCopyWith<_i14.Offering> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$OfferingCopyWith_26<_i14.Offering>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i14.$OfferingCopyWith<_i14.Offering>);

  @override
  _i15.Package? getPackage(String? identifier) =>
      (super.noSuchMethod(Invocation.method(
        #getPackage,
        [identifier],
      )) as _i15.Package?);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [Offerings].
///
/// See the documentation for Mockito's code generation for more information.
class MockOfferings extends _i1.Mock implements _i13.Offerings {
  MockOfferings() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, _i14.Offering> get all => (super.noSuchMethod(
        Invocation.getter(#all),
        returnValue: <String, _i14.Offering>{},
      ) as Map<String, _i14.Offering>);

  @override
  _i13.$OfferingsCopyWith<_i13.Offerings> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$OfferingsCopyWith_27<_i13.Offerings>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i13.$OfferingsCopyWith<_i13.Offerings>);

  @override
  _i14.Offering? getOffering(String? identifier) =>
      (super.noSuchMethod(Invocation.method(
        #getOffering,
        [identifier],
      )) as _i14.Offering?);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [Package].
///
/// See the documentation for Mockito's code generation for more information.
class MockPackage extends _i1.Mock implements _i15.Package {
  MockPackage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get identifier => (super.noSuchMethod(
        Invocation.getter(#identifier),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#identifier),
        ),
      ) as String);

  @override
  _i15.PackageType get packageType => (super.noSuchMethod(
        Invocation.getter(#packageType),
        returnValue: _i15.PackageType.unknown,
      ) as _i15.PackageType);

  @override
  _i13.StoreProduct get storeProduct => (super.noSuchMethod(
        Invocation.getter(#storeProduct),
        returnValue: _FakeStoreProduct_28(
          this,
          Invocation.getter(#storeProduct),
        ),
      ) as _i13.StoreProduct);

  @override
  String get offeringIdentifier => (super.noSuchMethod(
        Invocation.getter(#offeringIdentifier),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#offeringIdentifier),
        ),
      ) as String);

  @override
  _i15.$PackageCopyWith<_i15.Package> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$PackageCopyWith_29<_i15.Package>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i15.$PackageCopyWith<_i15.Package>);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [PlatformDispatcher].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformDispatcher extends _i1.Mock
    implements _i5.PlatformDispatcher {
  MockPlatformDispatcher() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set onPlatformConfigurationChanged(_i5.VoidCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onPlatformConfigurationChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Iterable<_i5.Display> get displays => (super.noSuchMethod(
        Invocation.getter(#displays),
        returnValue: <_i5.Display>[],
      ) as Iterable<_i5.Display>);

  @override
  Iterable<_i5.FlutterView> get views => (super.noSuchMethod(
        Invocation.getter(#views),
        returnValue: <_i5.FlutterView>[],
      ) as Iterable<_i5.FlutterView>);

  @override
  set onMetricsChanged(_i5.VoidCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onMetricsChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onBeginFrame(_i5.FrameCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onBeginFrame,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onDrawFrame(_i5.VoidCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onDrawFrame,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onPointerDataPacket(_i5.PointerDataPacketCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onPointerDataPacket,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onKeyData(_i5.KeyDataCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onKeyData,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onReportTimings(_i5.TimingsCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onReportTimings,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onPlatformMessage(_i5.PlatformMessageCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onPlatformMessage,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.AccessibilityFeatures get accessibilityFeatures => (super.noSuchMethod(
        Invocation.getter(#accessibilityFeatures),
        returnValue: _FakeAccessibilityFeatures_30(
          this,
          Invocation.getter(#accessibilityFeatures),
        ),
      ) as _i5.AccessibilityFeatures);

  @override
  set onAccessibilityFeaturesChanged(_i5.VoidCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onAccessibilityFeaturesChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Locale get locale => (super.noSuchMethod(
        Invocation.getter(#locale),
        returnValue: _FakeLocale_31(
          this,
          Invocation.getter(#locale),
        ),
      ) as _i5.Locale);

  @override
  List<_i5.Locale> get locales => (super.noSuchMethod(
        Invocation.getter(#locales),
        returnValue: <_i5.Locale>[],
      ) as List<_i5.Locale>);

  @override
  set onLocaleChanged(_i5.VoidCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onLocaleChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get initialLifecycleState => (super.noSuchMethod(
        Invocation.getter(#initialLifecycleState),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#initialLifecycleState),
        ),
      ) as String);

  @override
  bool get alwaysUse24HourFormat => (super.noSuchMethod(
        Invocation.getter(#alwaysUse24HourFormat),
        returnValue: false,
      ) as bool);

  @override
  double get textScaleFactor => (super.noSuchMethod(
        Invocation.getter(#textScaleFactor),
        returnValue: 0.0,
      ) as double);

  @override
  set onTextScaleFactorChanged(_i5.VoidCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onTextScaleFactorChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get nativeSpellCheckServiceDefined => (super.noSuchMethod(
        Invocation.getter(#nativeSpellCheckServiceDefined),
        returnValue: false,
      ) as bool);

  @override
  bool get brieflyShowPassword => (super.noSuchMethod(
        Invocation.getter(#brieflyShowPassword),
        returnValue: false,
      ) as bool);

  @override
  _i5.Brightness get platformBrightness => (super.noSuchMethod(
        Invocation.getter(#platformBrightness),
        returnValue: _i5.Brightness.dark,
      ) as _i5.Brightness);

  @override
  set onPlatformBrightnessChanged(_i5.VoidCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onPlatformBrightnessChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onSystemFontFamilyChanged(_i5.VoidCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onSystemFontFamilyChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get semanticsEnabled => (super.noSuchMethod(
        Invocation.getter(#semanticsEnabled),
        returnValue: false,
      ) as bool);

  @override
  set onSemanticsEnabledChanged(_i5.VoidCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onSemanticsEnabledChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onSemanticsActionEvent(_i5.SemanticsActionEventCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onSemanticsActionEvent,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.FrameData get frameData => (super.noSuchMethod(
        Invocation.getter(#frameData),
        returnValue: _FakeFrameData_32(
          this,
          Invocation.getter(#frameData),
        ),
      ) as _i5.FrameData);

  @override
  set onFrameDataChanged(_i5.VoidCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onFrameDataChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onError(_i5.ErrorCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onError,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get defaultRouteName => (super.noSuchMethod(
        Invocation.getter(#defaultRouteName),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#defaultRouteName),
        ),
      ) as String);

  @override
  _i5.FlutterView? view({required int? id}) =>
      (super.noSuchMethod(Invocation.method(
        #view,
        [],
        {#id: id},
      )) as _i5.FlutterView?);

  @override
  void sendPlatformMessage(
    String? name,
    _i29.ByteData? data,
    _i5.PlatformMessageResponseCallback? callback,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sendPlatformMessage,
          [
            name,
            data,
            callback,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendPortPlatformMessage(
    String? name,
    _i29.ByteData? data,
    int? identifier,
    _i30.SendPort? port,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sendPortPlatformMessage,
          [
            name,
            data,
            identifier,
            port,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerBackgroundIsolate(_i5.RootIsolateToken? token) =>
      super.noSuchMethod(
        Invocation.method(
          #registerBackgroundIsolate,
          [token],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIsolateDebugName(String? name) => super.noSuchMethod(
        Invocation.method(
          #setIsolateDebugName,
          [name],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void requestDartPerformanceMode(_i5.DartPerformanceMode? mode) =>
      super.noSuchMethod(
        Invocation.method(
          #requestDartPerformanceMode,
          [mode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void scheduleFrame() => super.noSuchMethod(
        Invocation.method(
          #scheduleFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateSemantics(_i5.SemanticsUpdate? update) => super.noSuchMethod(
        Invocation.method(
          #updateSemantics,
          [update],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Locale? computePlatformResolvedLocale(
          List<_i5.Locale>? supportedLocales) =>
      (super.noSuchMethod(Invocation.method(
        #computePlatformResolvedLocale,
        [supportedLocales],
      )) as _i5.Locale?);

  @override
  double scaleFontSize(double? unscaledFontSize) => (super.noSuchMethod(
        Invocation.method(
          #scaleFontSize,
          [unscaledFontSize],
        ),
        returnValue: 0.0,
      ) as double);
}

/// A class which mocks [PlatformException].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformException extends _i1.Mock implements _i31.PlatformException {
  MockPlatformException() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get code => (super.noSuchMethod(
        Invocation.getter(#code),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#code),
        ),
      ) as String);
}

/// A class which mocks [PlatformWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformWrapper extends _i1.Mock implements _i32.PlatformWrapper {
  MockPlatformWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAndroid => (super.noSuchMethod(
        Invocation.getter(#isAndroid),
        returnValue: false,
      ) as bool);

  @override
  bool get isDebug => (super.noSuchMethod(
        Invocation.getter(#isDebug),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [PreferenceManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockPreferenceManager extends _i1.Mock implements _i33.PreferenceManager {
  MockPreferenceManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Stream<dynamic> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i19.Stream<dynamic>.empty(),
      ) as _i19.Stream<dynamic>);

  @override
  int get lives => (super.noSuchMethod(
        Invocation.getter(#lives),
        returnValue: 0,
      ) as int);

  @override
  set lives(int? value) => super.noSuchMethod(
        Invocation.setter(
          #lives,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i34.Difficulty get difficulty => (super.noSuchMethod(
        Invocation.getter(#difficulty),
        returnValue: _i34.Difficulty.kids,
      ) as _i34.Difficulty);

  @override
  set difficulty(_i34.Difficulty? value) => super.noSuchMethod(
        Invocation.setter(
          #difficulty,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set colorIndex(int? value) => super.noSuchMethod(
        Invocation.setter(
          #colorIndex,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void clearLives() => super.noSuchMethod(
        Invocation.method(
          #clearLives,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PropertiesManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockPropertiesManager extends _i1.Mock implements _i35.PropertiesManager {
  MockPropertiesManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get adUnitIdApple => (super.noSuchMethod(
        Invocation.getter(#adUnitIdApple),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#adUnitIdApple),
        ),
      ) as String);

  @override
  String get adUnitIdAndroid => (super.noSuchMethod(
        Invocation.getter(#adUnitIdAndroid),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#adUnitIdAndroid),
        ),
      ) as String);

  @override
  String get revenueCatKeyApple => (super.noSuchMethod(
        Invocation.getter(#revenueCatKeyApple),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#revenueCatKeyApple),
        ),
      ) as String);

  @override
  String get revenueCatKeyAndroid => (super.noSuchMethod(
        Invocation.getter(#revenueCatKeyAndroid),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#revenueCatKeyAndroid),
        ),
      ) as String);

  @override
  _i19.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [PurchasesManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockPurchasesManager extends _i1.Mock implements _i36.PurchasesManager {
  MockPurchasesManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<_i13.CustomerInfo?> purchase(_i15.Package? package) =>
      (super.noSuchMethod(
        Invocation.method(
          #purchase,
          [package],
        ),
        returnValue: _i19.Future<_i13.CustomerInfo?>.value(),
      ) as _i19.Future<_i13.CustomerInfo?>);
}

/// A class which mocks [PurchasesWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockPurchasesWrapper extends _i1.Mock implements _i37.PurchasesWrapper {
  MockPurchasesWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<void> configure(_i13.PurchasesConfiguration? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #configure,
          [config],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> setLogLevel(_i38.LogLevel? logLevel) => (super.noSuchMethod(
        Invocation.method(
          #setLogLevel,
          [logLevel],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<_i13.Offerings> getOfferings() => (super.noSuchMethod(
        Invocation.method(
          #getOfferings,
          [],
        ),
        returnValue: _i19.Future<_i13.Offerings>.value(_FakeOfferings_33(
          this,
          Invocation.method(
            #getOfferings,
            [],
          ),
        )),
      ) as _i19.Future<_i13.Offerings>);

  @override
  _i19.Future<_i13.CustomerInfo> purchasePackage(_i15.Package? package) =>
      (super.noSuchMethod(
        Invocation.method(
          #purchasePackage,
          [package],
        ),
        returnValue: _i19.Future<_i13.CustomerInfo>.value(_FakeCustomerInfo_34(
          this,
          Invocation.method(
            #purchasePackage,
            [package],
          ),
        )),
      ) as _i19.Future<_i13.CustomerInfo>);
}

/// A class which mocks [RewardedAd].
///
/// See the documentation for Mockito's code generation for more information.
class MockRewardedAd extends _i1.Mock implements _i39.RewardedAd {
  MockRewardedAd() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.RewardedAdLoadCallback get rewardedAdLoadCallback => (super.noSuchMethod(
        Invocation.getter(#rewardedAdLoadCallback),
        returnValue: _FakeRewardedAdLoadCallback_35(
          this,
          Invocation.getter(#rewardedAdLoadCallback),
        ),
      ) as _i16.RewardedAdLoadCallback);

  @override
  set fullScreenContentCallback(
          _i16.FullScreenContentCallback<_i39.RewardedAd>?
              _fullScreenContentCallback) =>
      super.noSuchMethod(
        Invocation.setter(
          #fullScreenContentCallback,
          _fullScreenContentCallback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onUserEarnedRewardCallback(
          _i16.OnUserEarnedRewardCallback? _onUserEarnedRewardCallback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onUserEarnedRewardCallback,
          _onUserEarnedRewardCallback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onPaidEvent(_i16.OnPaidEventCallback? _onPaidEvent) => super.noSuchMethod(
        Invocation.setter(
          #onPaidEvent,
          _onPaidEvent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get adUnitId => (super.noSuchMethod(
        Invocation.getter(#adUnitId),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#adUnitId),
        ),
      ) as String);

  @override
  set responseInfo(_i39.ResponseInfo? _responseInfo) => super.noSuchMethod(
        Invocation.setter(
          #responseInfo,
          _responseInfo,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> show(
          {required _i16.OnUserEarnedRewardCallback? onUserEarnedReward}) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [],
          {#onUserEarnedReward: onUserEarnedReward},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> setServerSideOptions(
          _i39.ServerSideVerificationOptions? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #setServerSideOptions,
          [options],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> setImmersiveMode(bool? immersiveModeEnabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setImmersiveMode,
          [immersiveModeEnabled],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [RewardedAdWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockRewardedAdWrapper extends _i1.Mock implements _i40.RewardedAdWrapper {
  MockRewardedAdWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<void> load({
    required String? adUnitId,
    required _i39.AdRequest? request,
    required _i16.RewardedAdLoadCallback? rewardedAdLoadCallback,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
          {
            #adUnitId: adUnitId,
            #request: request,
            #rewardedAdLoadCallback: rewardedAdLoadCallback,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i41.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
      ) as Set<String>);

  @override
  Object? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as Object?);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);

  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);

  @override
  double? getDouble(String? key) => (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);

  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);

  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);

  @override
  _i19.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [StoreProduct].
///
/// See the documentation for Mockito's code generation for more information.
class MockStoreProduct extends _i1.Mock implements _i13.StoreProduct {
  MockStoreProduct() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get identifier => (super.noSuchMethod(
        Invocation.getter(#identifier),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#identifier),
        ),
      ) as String);

  @override
  String get description => (super.noSuchMethod(
        Invocation.getter(#description),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#description),
        ),
      ) as String);

  @override
  String get title => (super.noSuchMethod(
        Invocation.getter(#title),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#title),
        ),
      ) as String);

  @override
  double get price => (super.noSuchMethod(
        Invocation.getter(#price),
        returnValue: 0.0,
      ) as double);

  @override
  String get priceString => (super.noSuchMethod(
        Invocation.getter(#priceString),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#priceString),
        ),
      ) as String);

  @override
  String get currencyCode => (super.noSuchMethod(
        Invocation.getter(#currencyCode),
        returnValue: _i26.dummyValue<String>(
          this,
          Invocation.getter(#currencyCode),
        ),
      ) as String);

  @override
  _i13.$StoreProductCopyWith<_i13.StoreProduct> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$StoreProductCopyWith_36<_i13.StoreProduct>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i13.$StoreProductCopyWith<_i13.StoreProduct>);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [TapDownEvent].
///
/// See the documentation for Mockito's code generation for more information.
class MockTapDownEvent extends _i1.Mock implements _i42.TapDownEvent {
  MockTapDownEvent() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get pointerId => (super.noSuchMethod(
        Invocation.getter(#pointerId),
        returnValue: 0,
      ) as int);

  @override
  _i5.PointerDeviceKind get deviceKind => (super.noSuchMethod(
        Invocation.getter(#deviceKind),
        returnValue: _i5.PointerDeviceKind.touch,
      ) as _i5.PointerDeviceKind);

  @override
  _i4.Vector2 get devicePosition => (super.noSuchMethod(
        Invocation.getter(#devicePosition),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#devicePosition),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 get canvasPosition => (super.noSuchMethod(
        Invocation.getter(#canvasPosition),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#canvasPosition),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 get localPosition => (super.noSuchMethod(
        Invocation.getter(#localPosition),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#localPosition),
        ),
      ) as _i4.Vector2);

  @override
  List<_i4.Vector2> get renderingTrace => (super.noSuchMethod(
        Invocation.getter(#renderingTrace),
        returnValue: <_i4.Vector2>[],
      ) as List<_i4.Vector2>);

  @override
  bool get handled => (super.noSuchMethod(
        Invocation.getter(#handled),
        returnValue: false,
      ) as bool);

  @override
  set handled(bool? _handled) => super.noSuchMethod(
        Invocation.setter(
          #handled,
          _handled,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get continuePropagation => (super.noSuchMethod(
        Invocation.getter(#continuePropagation),
        returnValue: false,
      ) as bool);

  @override
  set continuePropagation(bool? _continuePropagation) => super.noSuchMethod(
        Invocation.setter(
          #continuePropagation,
          _continuePropagation,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Iterable<_i3.Component> collectApplicableChildren(
          {required _i3.Component? rootComponent}) =>
      (super.noSuchMethod(
        Invocation.method(
          #collectApplicableChildren,
          [],
          {#rootComponent: rootComponent},
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  void deliverAtPoint<T extends _i3.Component>({
    required _i3.Component? rootComponent,
    required void Function(T)? eventHandler,
    bool? deliverToAll = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #deliverAtPoint,
          [],
          {
            #rootComponent: rootComponent,
            #eventHandler: eventHandler,
            #deliverToAll: deliverToAll,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void deliverToComponents<T extends _i3.Component>(
    _i3.Component? rootComponent,
    void Function(T)? eventHandler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #deliverToComponents,
          [
            rootComponent,
            eventHandler,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TargetBoard].
///
/// See the documentation for Mockito's code generation for more information.
class MockTargetBoard extends _i1.Mock implements _i24.TargetBoard {
  MockTargetBoard() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ComponentKey get otherBoardKey => (super.noSuchMethod(
        Invocation.getter(#otherBoardKey),
        returnValue: _FakeComponentKey_37(
          this,
          Invocation.getter(#otherBoardKey),
        ),
      ) as _i3.ComponentKey);

  @override
  double get verticalStartFactor => (super.noSuchMethod(
        Invocation.getter(#verticalStartFactor),
        returnValue: 0.0,
      ) as double);

  @override
  _i4.Transform2D get transform => (super.noSuchMethod(
        Invocation.getter(#transform),
        returnValue: _FakeTransform2D_38(
          this,
          Invocation.getter(#transform),
        ),
      ) as _i4.Transform2D);

  @override
  double get nativeAngle => (super.noSuchMethod(
        Invocation.getter(#nativeAngle),
        returnValue: 0.0,
      ) as double);

  @override
  set nativeAngle(double? _nativeAngle) => super.noSuchMethod(
        Invocation.setter(
          #nativeAngle,
          _nativeAngle,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Decorator get decorator => (super.noSuchMethod(
        Invocation.getter(#decorator),
        returnValue: _FakeDecorator_39(
          this,
          Invocation.getter(#decorator),
        ),
      ) as _i17.Decorator);

  @override
  set decorator(_i17.Decorator? _decorator) => super.noSuchMethod(
        Invocation.setter(
          #decorator,
          _decorator,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Matrix4 get transformMatrix => (super.noSuchMethod(
        Invocation.getter(#transformMatrix),
        returnValue: _FakeMatrix4_40(
          this,
          Invocation.getter(#transformMatrix),
        ),
      ) as _i4.Matrix4);

  @override
  _i4.NotifyingVector2 get position => (super.noSuchMethod(
        Invocation.getter(#position),
        returnValue: _FakeNotifyingVector2_41(
          this,
          Invocation.getter(#position),
        ),
      ) as _i4.NotifyingVector2);

  @override
  set position(_i4.Vector2? position) => super.noSuchMethod(
        Invocation.setter(
          #position,
          position,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get x => (super.noSuchMethod(
        Invocation.getter(#x),
        returnValue: 0.0,
      ) as double);

  @override
  set x(double? x) => super.noSuchMethod(
        Invocation.setter(
          #x,
          x,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get y => (super.noSuchMethod(
        Invocation.getter(#y),
        returnValue: 0.0,
      ) as double);

  @override
  set y(double? y) => super.noSuchMethod(
        Invocation.setter(
          #y,
          y,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get angle => (super.noSuchMethod(
        Invocation.getter(#angle),
        returnValue: 0.0,
      ) as double);

  @override
  set angle(double? a) => super.noSuchMethod(
        Invocation.setter(
          #angle,
          a,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.NotifyingVector2 get scale => (super.noSuchMethod(
        Invocation.getter(#scale),
        returnValue: _FakeNotifyingVector2_41(
          this,
          Invocation.getter(#scale),
        ),
      ) as _i4.NotifyingVector2);

  @override
  set scale(_i4.Vector2? scale) => super.noSuchMethod(
        Invocation.setter(
          #scale,
          scale,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Anchor get anchor => (super.noSuchMethod(
        Invocation.getter(#anchor),
        returnValue: _FakeAnchor_42(
          this,
          Invocation.getter(#anchor),
        ),
      ) as _i3.Anchor);

  @override
  set anchor(_i3.Anchor? anchor) => super.noSuchMethod(
        Invocation.setter(
          #anchor,
          anchor,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.NotifyingVector2 get size => (super.noSuchMethod(
        Invocation.getter(#size),
        returnValue: _FakeNotifyingVector2_41(
          this,
          Invocation.getter(#size),
        ),
      ) as _i4.NotifyingVector2);

  @override
  set size(_i4.Vector2? size) => super.noSuchMethod(
        Invocation.setter(
          #size,
          size,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get width => (super.noSuchMethod(
        Invocation.getter(#width),
        returnValue: 0.0,
      ) as double);

  @override
  set width(double? w) => super.noSuchMethod(
        Invocation.setter(
          #width,
          w,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get height => (super.noSuchMethod(
        Invocation.getter(#height),
        returnValue: 0.0,
      ) as double);

  @override
  set height(double? h) => super.noSuchMethod(
        Invocation.setter(
          #height,
          h,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Vector2 get scaledSize => (super.noSuchMethod(
        Invocation.getter(#scaledSize),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#scaledSize),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 get absoluteScaledSize => (super.noSuchMethod(
        Invocation.getter(#absoluteScaledSize),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#absoluteScaledSize),
        ),
      ) as _i4.Vector2);

  @override
  double get absoluteAngle => (super.noSuchMethod(
        Invocation.getter(#absoluteAngle),
        returnValue: 0.0,
      ) as double);

  @override
  _i4.Vector2 get absoluteScale => (super.noSuchMethod(
        Invocation.getter(#absoluteScale),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#absoluteScale),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 get topLeftPosition => (super.noSuchMethod(
        Invocation.getter(#topLeftPosition),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#topLeftPosition),
        ),
      ) as _i4.Vector2);

  @override
  set topLeftPosition(_i4.Vector2? point) => super.noSuchMethod(
        Invocation.setter(
          #topLeftPosition,
          point,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Vector2 get center => (super.noSuchMethod(
        Invocation.getter(#center),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#center),
        ),
      ) as _i4.Vector2);

  @override
  set center(_i4.Vector2? point) => super.noSuchMethod(
        Invocation.setter(
          #center,
          point,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Vector2 get absolutePosition => (super.noSuchMethod(
        Invocation.getter(#absolutePosition),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#absolutePosition),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 get absoluteTopLeftPosition => (super.noSuchMethod(
        Invocation.getter(#absoluteTopLeftPosition),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#absoluteTopLeftPosition),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 get absoluteCenter => (super.noSuchMethod(
        Invocation.getter(#absoluteCenter),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#absoluteCenter),
        ),
      ) as _i4.Vector2);

  @override
  bool get isFlippedHorizontally => (super.noSuchMethod(
        Invocation.getter(#isFlippedHorizontally),
        returnValue: false,
      ) as bool);

  @override
  bool get isFlippedVertically => (super.noSuchMethod(
        Invocation.getter(#isFlippedVertically),
        returnValue: false,
      ) as bool);

  @override
  bool get debugMode => (super.noSuchMethod(
        Invocation.getter(#debugMode),
        returnValue: false,
      ) as bool);

  @override
  set debugMode(bool? _debugMode) => super.noSuchMethod(
        Invocation.setter(
          #debugMode,
          _debugMode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set debugCoordinatesPrecision(int? _debugCoordinatesPrecision) =>
      super.noSuchMethod(
        Invocation.setter(
          #debugCoordinatesPrecision,
          _debugCoordinatesPrecision,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Color get debugColor => (super.noSuchMethod(
        Invocation.getter(#debugColor),
        returnValue: _FakeColor_3(
          this,
          Invocation.getter(#debugColor),
        ),
      ) as _i5.Color);

  @override
  set debugColor(_i5.Color? _debugColor) => super.noSuchMethod(
        Invocation.setter(
          #debugColor,
          _debugColor,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isLoaded => (super.noSuchMethod(
        Invocation.getter(#isLoaded),
        returnValue: false,
      ) as bool);

  @override
  bool get isMounting => (super.noSuchMethod(
        Invocation.getter(#isMounting),
        returnValue: false,
      ) as bool);

  @override
  bool get isMounted => (super.noSuchMethod(
        Invocation.getter(#isMounted),
        returnValue: false,
      ) as bool);

  @override
  bool get isRemoving => (super.noSuchMethod(
        Invocation.getter(#isRemoving),
        returnValue: false,
      ) as bool);

  @override
  bool get isRemoved => (super.noSuchMethod(
        Invocation.getter(#isRemoved),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<void> get loaded => (super.noSuchMethod(
        Invocation.getter(#loaded),
        returnValue: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> get removed => (super.noSuchMethod(
        Invocation.getter(#removed),
        returnValue: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  set parent(_i3.Component? newParent) => super.noSuchMethod(
        Invocation.setter(
          #parent,
          newParent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ComponentSet get children => (super.noSuchMethod(
        Invocation.getter(#children),
        returnValue: _FakeComponentSet_4(
          this,
          Invocation.getter(#children),
        ),
      ) as _i3.ComponentSet);

  @override
  bool get hasChildren => (super.noSuchMethod(
        Invocation.getter(#hasChildren),
        returnValue: false,
      ) as bool);

  @override
  int get priority => (super.noSuchMethod(
        Invocation.getter(#priority),
        returnValue: 0,
      ) as int);

  @override
  set priority(int? newPriority) => super.noSuchMethod(
        Invocation.setter(
          #priority,
          newPriority,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Paint get debugPaint => (super.noSuchMethod(
        Invocation.getter(#debugPaint),
        returnValue: _FakePaint_5(
          this,
          Invocation.getter(#debugPaint),
        ),
      ) as _i5.Paint);

  @override
  _i4.TextPaint get debugTextPaint => (super.noSuchMethod(
        Invocation.getter(#debugTextPaint),
        returnValue: _FakeTextPaint_6(
          this,
          Invocation.getter(#debugTextPaint),
        ),
      ) as _i4.TextPaint);

  @override
  _i4.FlameGame<_i3.World> get game => (super.noSuchMethod(
        Invocation.getter(#game),
        returnValue: _FakeFlameGame_17<_i3.World>(
          this,
          Invocation.getter(#game),
        ),
      ) as _i4.FlameGame<_i3.World>);

  @override
  set game(_i4.FlameGame<_i3.World>? value) => super.noSuchMethod(
        Invocation.setter(
          #game,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.FlameGame<_i3.World> get gameRef => (super.noSuchMethod(
        Invocation.getter(#gameRef),
        returnValue: _FakeFlameGame_17<_i3.World>(
          this,
          Invocation.getter(#gameRef),
        ),
      ) as _i4.FlameGame<_i3.World>);

  @override
  _i2.ColorTapWorld get world => (super.noSuchMethod(
        Invocation.getter(#world),
        returnValue: _FakeColorTapWorld_0(
          this,
          Invocation.getter(#world),
        ),
      ) as _i2.ColorTapWorld);

  @override
  set world(_i2.ColorTapWorld? value) => super.noSuchMethod(
        Invocation.setter(
          #world,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onRemove() => super.noSuchMethod(
        Invocation.method(
          #onRemove,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update(double? dt) => super.noSuchMethod(
        Invocation.method(
          #update,
          [dt],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resetForNewGame() => super.noSuchMethod(
        Invocation.method(
          #resetForNewGame,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  double distance(_i3.PositionComponent? other) => (super.noSuchMethod(
        Invocation.method(
          #distance,
          [other],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  bool containsLocalPoint(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #containsLocalPoint,
          [point],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool containsPoint(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #containsPoint,
          [point],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i4.Vector2 parentToLocal(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #parentToLocal,
          [point],
        ),
        returnValue: _FakeVector2_2(
          this,
          Invocation.method(
            #parentToLocal,
            [point],
          ),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 localToParent(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #localToParent,
          [point],
        ),
        returnValue: _FakeVector2_2(
          this,
          Invocation.method(
            #localToParent,
            [point],
          ),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 positionOf(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #positionOf,
          [point],
        ),
        returnValue: _FakeVector2_2(
          this,
          Invocation.method(
            #positionOf,
            [point],
          ),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 positionOfAnchor(_i3.Anchor? anchor) => (super.noSuchMethod(
        Invocation.method(
          #positionOfAnchor,
          [anchor],
        ),
        returnValue: _FakeVector2_2(
          this,
          Invocation.method(
            #positionOfAnchor,
            [anchor],
          ),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 absolutePositionOf(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #absolutePositionOf,
          [point],
        ),
        returnValue: _FakeVector2_2(
          this,
          Invocation.method(
            #absolutePositionOf,
            [point],
          ),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 absolutePositionOfAnchor(_i3.Anchor? anchor) =>
      (super.noSuchMethod(
        Invocation.method(
          #absolutePositionOfAnchor,
          [anchor],
        ),
        returnValue: _FakeVector2_2(
          this,
          Invocation.method(
            #absolutePositionOfAnchor,
            [anchor],
          ),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 toLocal(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #toLocal,
          [point],
        ),
        returnValue: _FakeVector2_2(
          this,
          Invocation.method(
            #toLocal,
            [point],
          ),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 absoluteToLocal(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #absoluteToLocal,
          [point],
        ),
        returnValue: _FakeVector2_2(
          this,
          Invocation.method(
            #absoluteToLocal,
            [point],
          ),
        ),
      ) as _i4.Vector2);

  @override
  double angleTo(_i4.Vector2? target) => (super.noSuchMethod(
        Invocation.method(
          #angleTo,
          [target],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  void lookAt(_i4.Vector2? target) => super.noSuchMethod(
        Invocation.method(
          #lookAt,
          [target],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void flipHorizontally() => super.noSuchMethod(
        Invocation.method(
          #flipHorizontally,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void flipVertically() => super.noSuchMethod(
        Invocation.method(
          #flipVertically,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void flipHorizontallyAroundCenter() => super.noSuchMethod(
        Invocation.method(
          #flipHorizontallyAroundCenter,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void flipVerticallyAroundCenter() => super.noSuchMethod(
        Invocation.method(
          #flipVerticallyAroundCenter,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void renderDebugMode(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #renderDebugMode,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void renderTree(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #renderTree,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Rect toRect() => (super.noSuchMethod(
        Invocation.method(
          #toRect,
          [],
        ),
        returnValue: _FakeRect_22(
          this,
          Invocation.method(
            #toRect,
            [],
          ),
        ),
      ) as _i5.Rect);

  @override
  _i5.Rect toAbsoluteRect() => (super.noSuchMethod(
        Invocation.method(
          #toAbsoluteRect,
          [],
        ),
        returnValue: _FakeRect_22(
          this,
          Invocation.method(
            #toAbsoluteRect,
            [],
          ),
        ),
      ) as _i5.Rect);

  @override
  void setByRect(_i5.Rect? rect) => super.noSuchMethod(
        Invocation.method(
          #setByRect,
          [rect],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ComponentSet createComponentSet() => (super.noSuchMethod(
        Invocation.method(
          #createComponentSet,
          [],
        ),
        returnValue: _FakeComponentSet_4(
          this,
          Invocation.method(
            #createComponentSet,
            [],
          ),
        ),
      ) as _i3.ComponentSet);

  @override
  T? findParent<T extends _i3.Component>({bool? includeSelf = false}) =>
      (super.noSuchMethod(Invocation.method(
        #findParent,
        [],
        {#includeSelf: includeSelf},
      )) as T?);

  @override
  Iterable<_i3.Component> ancestors({bool? includeSelf = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #ancestors,
          [],
          {#includeSelf: includeSelf},
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  Iterable<_i3.Component> descendants({
    bool? includeSelf = false,
    bool? reversed = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #descendants,
          [],
          {
            #includeSelf: includeSelf,
            #reversed: reversed,
          },
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  bool propagateToChildren<T extends _i3.Component>(
    bool Function(T)? handler, {
    bool? includeSelf = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #propagateToChildren,
          [handler],
          {#includeSelf: includeSelf},
        ),
        returnValue: false,
      ) as bool);

  @override
  bool contains(_i3.Component? c) => (super.noSuchMethod(
        Invocation.method(
          #contains,
          [c],
        ),
        returnValue: false,
      ) as bool);

  @override
  void onGameResize(_i4.Vector2? size) => super.noSuchMethod(
        Invocation.method(
          #onGameResize,
          [size],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onMount() => super.noSuchMethod(
        Invocation.method(
          #onMount,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onParentResize(_i4.Vector2? maxSize) => super.noSuchMethod(
        Invocation.method(
          #onParentResize,
          [maxSize],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateTree(double? dt) => super.noSuchMethod(
        Invocation.method(
          #updateTree,
          [dt],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChildrenChanged(
    _i3.Component? child,
    _i3.ChildrenChangeType? type,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onChildrenChanged,
          [
            child,
            type,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void render(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #render,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.FutureOr<void> add(_i3.Component? component) =>
      (super.noSuchMethod(Invocation.method(
        #add,
        [component],
      )) as _i19.FutureOr<void>);

  @override
  _i19.FutureOr<void> addToParent(_i3.Component? parent) =>
      (super.noSuchMethod(Invocation.method(
        #addToParent,
        [parent],
      )) as _i19.FutureOr<void>);

  @override
  _i19.Future<void> addAll(Iterable<_i3.Component>? components) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAll,
          [components],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void remove(_i3.Component? component) => super.noSuchMethod(
        Invocation.method(
          #remove,
          [component],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeFromParent() => super.noSuchMethod(
        Invocation.method(
          #removeFromParent,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeAll(Iterable<_i3.Component>? components) => super.noSuchMethod(
        Invocation.method(
          #removeAll,
          [components],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeWhere(bool Function(_i3.Component)? test) => super.noSuchMethod(
        Invocation.method(
          #removeWhere,
          [test],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Iterable<_i3.Component> componentsAtPoint(
    _i4.Vector2? point, [
    List<_i4.Vector2>? nestedPoints,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #componentsAtPoint,
          [
            point,
            nestedPoints,
          ],
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  Iterable<_i3.Component> componentsAtLocation<T>(
    T? locationContext,
    List<T>? nestedContexts,
    T? Function(
      _i3.CoordinateTransform,
      T,
    )? transformContext,
    bool Function(
      _i3.Component,
      T,
    )? checkContains,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #componentsAtLocation,
          [
            locationContext,
            nestedContexts,
            transformContext,
            checkContains,
          ],
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  _i21.LifecycleEventStatus handleLifecycleEventAdd(_i3.Component? parent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleLifecycleEventAdd,
          [parent],
        ),
        returnValue: _i21.LifecycleEventStatus.skip,
      ) as _i21.LifecycleEventStatus);

  @override
  _i21.LifecycleEventStatus handleLifecycleEventRemove(_i3.Component? parent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleLifecycleEventRemove,
          [parent],
        ),
        returnValue: _i21.LifecycleEventStatus.skip,
      ) as _i21.LifecycleEventStatus);

  @override
  _i21.LifecycleEventStatus handleLifecycleEventMove(
          _i3.Component? newParent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleLifecycleEventMove,
          [newParent],
        ),
        returnValue: _i21.LifecycleEventStatus.skip,
      ) as _i21.LifecycleEventStatus);

  @override
  void handleResize(_i4.Vector2? size) => super.noSuchMethod(
        Invocation.method(
          #handleResize,
          [size],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMounted() => super.noSuchMethod(
        Invocation.method(
          #setMounted,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TimeManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimeManager extends _i1.Mock implements _i43.TimeManager {
  MockTimeManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get millisSinceEpoch => (super.noSuchMethod(
        Invocation.getter(#millisSinceEpoch),
        returnValue: 0,
      ) as int);
}

/// A class which mocks [UrlLauncherWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlLauncherWrapper extends _i1.Mock
    implements _i44.UrlLauncherWrapper {
  MockUrlLauncherWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<bool> launch(String? url) => (super.noSuchMethod(
        Invocation.method(
          #launch,
          [url],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
}

/// A class which mocks [Viewport].
///
/// See the documentation for Mockito's code generation for more information.
class MockViewport extends _i1.Mock implements _i45.Viewport {
  MockViewport() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Transform2D get transform => (super.noSuchMethod(
        Invocation.getter(#transform),
        returnValue: _FakeTransform2D_38(
          this,
          Invocation.getter(#transform),
        ),
      ) as _i4.Transform2D);

  @override
  _i3.Anchor get anchor => (super.noSuchMethod(
        Invocation.getter(#anchor),
        returnValue: _FakeAnchor_42(
          this,
          Invocation.getter(#anchor),
        ),
      ) as _i3.Anchor);

  @override
  set anchor(_i3.Anchor? _anchor) => super.noSuchMethod(
        Invocation.setter(
          #anchor,
          _anchor,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Vector2 get position => (super.noSuchMethod(
        Invocation.getter(#position),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#position),
        ),
      ) as _i4.Vector2);

  @override
  set position(_i4.Vector2? value) => super.noSuchMethod(
        Invocation.setter(
          #position,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Vector2 get size => (super.noSuchMethod(
        Invocation.getter(#size),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#size),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 get virtualSize => (super.noSuchMethod(
        Invocation.getter(#virtualSize),
        returnValue: _FakeVector2_2(
          this,
          Invocation.getter(#virtualSize),
        ),
      ) as _i4.Vector2);

  @override
  set size(_i4.Vector2? value) => super.noSuchMethod(
        Invocation.setter(
          #size,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.CameraComponent get camera => (super.noSuchMethod(
        Invocation.getter(#camera),
        returnValue: _FakeCameraComponent_1(
          this,
          Invocation.getter(#camera),
        ),
      ) as _i3.CameraComponent);

  @override
  bool get debugMode => (super.noSuchMethod(
        Invocation.getter(#debugMode),
        returnValue: false,
      ) as bool);

  @override
  set debugMode(bool? _debugMode) => super.noSuchMethod(
        Invocation.setter(
          #debugMode,
          _debugMode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set debugCoordinatesPrecision(int? _debugCoordinatesPrecision) =>
      super.noSuchMethod(
        Invocation.setter(
          #debugCoordinatesPrecision,
          _debugCoordinatesPrecision,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Color get debugColor => (super.noSuchMethod(
        Invocation.getter(#debugColor),
        returnValue: _FakeColor_3(
          this,
          Invocation.getter(#debugColor),
        ),
      ) as _i5.Color);

  @override
  set debugColor(_i5.Color? _debugColor) => super.noSuchMethod(
        Invocation.setter(
          #debugColor,
          _debugColor,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isLoaded => (super.noSuchMethod(
        Invocation.getter(#isLoaded),
        returnValue: false,
      ) as bool);

  @override
  bool get isMounting => (super.noSuchMethod(
        Invocation.getter(#isMounting),
        returnValue: false,
      ) as bool);

  @override
  bool get isMounted => (super.noSuchMethod(
        Invocation.getter(#isMounted),
        returnValue: false,
      ) as bool);

  @override
  bool get isRemoving => (super.noSuchMethod(
        Invocation.getter(#isRemoving),
        returnValue: false,
      ) as bool);

  @override
  bool get isRemoved => (super.noSuchMethod(
        Invocation.getter(#isRemoved),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<void> get loaded => (super.noSuchMethod(
        Invocation.getter(#loaded),
        returnValue: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> get removed => (super.noSuchMethod(
        Invocation.getter(#removed),
        returnValue: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  set parent(_i3.Component? newParent) => super.noSuchMethod(
        Invocation.setter(
          #parent,
          newParent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ComponentSet get children => (super.noSuchMethod(
        Invocation.getter(#children),
        returnValue: _FakeComponentSet_4(
          this,
          Invocation.getter(#children),
        ),
      ) as _i3.ComponentSet);

  @override
  bool get hasChildren => (super.noSuchMethod(
        Invocation.getter(#hasChildren),
        returnValue: false,
      ) as bool);

  @override
  int get priority => (super.noSuchMethod(
        Invocation.getter(#priority),
        returnValue: 0,
      ) as int);

  @override
  set priority(int? newPriority) => super.noSuchMethod(
        Invocation.setter(
          #priority,
          newPriority,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Paint get debugPaint => (super.noSuchMethod(
        Invocation.getter(#debugPaint),
        returnValue: _FakePaint_5(
          this,
          Invocation.getter(#debugPaint),
        ),
      ) as _i5.Paint);

  @override
  _i4.TextPaint get debugTextPaint => (super.noSuchMethod(
        Invocation.getter(#debugTextPaint),
        returnValue: _FakeTextPaint_6(
          this,
          Invocation.getter(#debugTextPaint),
        ),
      ) as _i4.TextPaint);

  @override
  void clip(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #clip,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool containsLocalPoint(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #containsLocalPoint,
          [point],
        ),
        returnValue: false,
      ) as bool);

  @override
  void onViewportResize() => super.noSuchMethod(
        Invocation.method(
          #onViewportResize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Vector2 globalToLocal(
    _i4.Vector2? point, {
    _i4.Vector2? output,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #globalToLocal,
          [point],
          {#output: output},
        ),
        returnValue: _FakeVector2_2(
          this,
          Invocation.method(
            #globalToLocal,
            [point],
            {#output: output},
          ),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 localToGlobal(
    _i4.Vector2? point, {
    _i4.Vector2? output,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #localToGlobal,
          [point],
          {#output: output},
        ),
        returnValue: _FakeVector2_2(
          this,
          Invocation.method(
            #localToGlobal,
            [point],
            {#output: output},
          ),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 parentToLocal(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #parentToLocal,
          [point],
        ),
        returnValue: _FakeVector2_2(
          this,
          Invocation.method(
            #parentToLocal,
            [point],
          ),
        ),
      ) as _i4.Vector2);

  @override
  _i4.Vector2 localToParent(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #localToParent,
          [point],
        ),
        returnValue: _FakeVector2_2(
          this,
          Invocation.method(
            #localToParent,
            [point],
          ),
        ),
      ) as _i4.Vector2);

  @override
  void transformCanvas(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #transformCanvas,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ComponentSet createComponentSet() => (super.noSuchMethod(
        Invocation.method(
          #createComponentSet,
          [],
        ),
        returnValue: _FakeComponentSet_4(
          this,
          Invocation.method(
            #createComponentSet,
            [],
          ),
        ),
      ) as _i3.ComponentSet);

  @override
  T? findParent<T extends _i3.Component>({bool? includeSelf = false}) =>
      (super.noSuchMethod(Invocation.method(
        #findParent,
        [],
        {#includeSelf: includeSelf},
      )) as T?);

  @override
  Iterable<_i3.Component> ancestors({bool? includeSelf = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #ancestors,
          [],
          {#includeSelf: includeSelf},
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  Iterable<_i3.Component> descendants({
    bool? includeSelf = false,
    bool? reversed = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #descendants,
          [],
          {
            #includeSelf: includeSelf,
            #reversed: reversed,
          },
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  bool propagateToChildren<T extends _i3.Component>(
    bool Function(T)? handler, {
    bool? includeSelf = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #propagateToChildren,
          [handler],
          {#includeSelf: includeSelf},
        ),
        returnValue: false,
      ) as bool);

  @override
  bool contains(_i3.Component? c) => (super.noSuchMethod(
        Invocation.method(
          #contains,
          [c],
        ),
        returnValue: false,
      ) as bool);

  @override
  void onGameResize(_i4.Vector2? size) => super.noSuchMethod(
        Invocation.method(
          #onGameResize,
          [size],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onMount() => super.noSuchMethod(
        Invocation.method(
          #onMount,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onRemove() => super.noSuchMethod(
        Invocation.method(
          #onRemove,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onParentResize(_i4.Vector2? maxSize) => super.noSuchMethod(
        Invocation.method(
          #onParentResize,
          [maxSize],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update(double? dt) => super.noSuchMethod(
        Invocation.method(
          #update,
          [dt],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateTree(double? dt) => super.noSuchMethod(
        Invocation.method(
          #updateTree,
          [dt],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChildrenChanged(
    _i3.Component? child,
    _i3.ChildrenChangeType? type,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onChildrenChanged,
          [
            child,
            type,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void render(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #render,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void renderTree(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #renderTree,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.FutureOr<void> add(_i3.Component? component) =>
      (super.noSuchMethod(Invocation.method(
        #add,
        [component],
      )) as _i19.FutureOr<void>);

  @override
  _i19.FutureOr<void> addToParent(_i3.Component? parent) =>
      (super.noSuchMethod(Invocation.method(
        #addToParent,
        [parent],
      )) as _i19.FutureOr<void>);

  @override
  _i19.Future<void> addAll(Iterable<_i3.Component>? components) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAll,
          [components],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void remove(_i3.Component? component) => super.noSuchMethod(
        Invocation.method(
          #remove,
          [component],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeFromParent() => super.noSuchMethod(
        Invocation.method(
          #removeFromParent,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeAll(Iterable<_i3.Component>? components) => super.noSuchMethod(
        Invocation.method(
          #removeAll,
          [components],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeWhere(bool Function(_i3.Component)? test) => super.noSuchMethod(
        Invocation.method(
          #removeWhere,
          [test],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool containsPoint(_i4.Vector2? point) => (super.noSuchMethod(
        Invocation.method(
          #containsPoint,
          [point],
        ),
        returnValue: false,
      ) as bool);

  @override
  Iterable<_i3.Component> componentsAtPoint(
    _i4.Vector2? point, [
    List<_i4.Vector2>? nestedPoints,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #componentsAtPoint,
          [
            point,
            nestedPoints,
          ],
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  Iterable<_i3.Component> componentsAtLocation<T>(
    T? locationContext,
    List<T>? nestedContexts,
    T? Function(
      _i3.CoordinateTransform,
      T,
    )? transformContext,
    bool Function(
      _i3.Component,
      T,
    )? checkContains,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #componentsAtLocation,
          [
            locationContext,
            nestedContexts,
            transformContext,
            checkContains,
          ],
        ),
        returnValue: <_i3.Component>[],
      ) as Iterable<_i3.Component>);

  @override
  _i21.LifecycleEventStatus handleLifecycleEventAdd(_i3.Component? parent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleLifecycleEventAdd,
          [parent],
        ),
        returnValue: _i21.LifecycleEventStatus.skip,
      ) as _i21.LifecycleEventStatus);

  @override
  _i21.LifecycleEventStatus handleLifecycleEventRemove(_i3.Component? parent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleLifecycleEventRemove,
          [parent],
        ),
        returnValue: _i21.LifecycleEventStatus.skip,
      ) as _i21.LifecycleEventStatus);

  @override
  _i21.LifecycleEventStatus handleLifecycleEventMove(
          _i3.Component? newParent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleLifecycleEventMove,
          [newParent],
        ),
        returnValue: _i21.LifecycleEventStatus.skip,
      ) as _i21.LifecycleEventStatus);

  @override
  void handleResize(_i4.Vector2? size) => super.noSuchMethod(
        Invocation.method(
          #handleResize,
          [size],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMounted() => super.noSuchMethod(
        Invocation.method(
          #setMounted,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void renderDebugMode(_i5.Canvas? canvas) => super.noSuchMethod(
        Invocation.method(
          #renderDebugMode,
          [canvas],
        ),
        returnValueForMissingStub: null,
      );
}
